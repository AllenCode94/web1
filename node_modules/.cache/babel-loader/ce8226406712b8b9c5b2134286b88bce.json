{"remainingRequest":"D:\\H52004\\vue\\day08\\obj\\node_modules\\thread-loader\\dist\\cjs.js!D:\\H52004\\vue\\day08\\obj\\node_modules\\babel-loader\\lib\\index.js!D:\\H52004\\vue\\day08\\obj\\src\\plugins\\axios.js","dependencies":[{"path":"D:\\H52004\\vue\\day08\\obj\\src\\plugins\\axios.js","mtime":1600687133621},{"path":"D:\\H52004\\vue\\day08\\obj\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600244154632},{"path":"D:\\H52004\\vue\\day08\\obj\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600244151827},{"path":"D:\\H52004\\vue\\day08\\obj\\node_modules\\babel-loader\\lib\\index.js","mtime":1600244171192}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport axios from 'axios';\nimport Vue from 'vue';\nimport router from \"./router.js\"; //响应拦截\n\naxios.interceptors.response.use(function (response) {\n  //response  ~~ axios请求后的res\n  // 响应数据回来后，到达目标组件之前，做点事   res.status   res.data.err == 2\n  //校验返回数据，token过期，路由跳转login,传递当前路由地址\n  var currentRoute = router.currentRoute.fullPath; //获取当前路由全路径，string\n\n  if (response.data.err === 2 && !currentRoute.includes('/login')) {\n    router.replace({\n      path: '/login',\n      query: {\n        p: currentRoute\n      }\n    });\n  }\n\n  return response; //奔向组件\n}, function (error) {\n  // 错误的响应，拦截\n  return Promise.reject(error);\n});\nVue.prototype.$axios = axios;\nwindow.axios = axios;\nexport default axios;",{"version":3,"sources":["D:\\H52004\\vue\\day08\\obj\\src\\plugins\\axios.js"],"names":["axios","Vue","router","interceptors","response","use","currentRoute","fullPath","data","err","includes","replace","path","query","p","error","Promise","reject","prototype","$axios","window"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,oB,CAGA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAASD,QAAT,EAAmB;AACjD;AACA;AACA;AACA,MAAIE,YAAY,GAAGJ,MAAM,CAACI,YAAP,CAAoBC,QAAvC,CAJiD,CAID;;AAChD,MAAGH,QAAQ,CAACI,IAAT,CAAcC,GAAd,KAAoB,CAApB,IAAyB,CAACH,YAAY,CAACI,QAAb,CAAsB,QAAtB,CAA7B,EAA6D;AAC3DR,IAAAA,MAAM,CAACS,OAAP,CAAe;AACbC,MAAAA,IAAI,EAAC,QADQ;AAEbC,MAAAA,KAAK,EAAC;AAACC,QAAAA,CAAC,EAACR;AAAH;AAFO,KAAf;AAID;;AAED,SAAOF,QAAP,CAZiD,CAYjC;AACjB,CAbD,EAaG,UAASW,KAAT,EAAgB;AACjB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBD;AAkBAd,GAAG,CAACiB,SAAJ,CAAcC,MAAd,GAAqBnB,KAArB;AACAoB,MAAM,CAACpB,KAAP,GAAaA,KAAb;AACA,eAAeA,KAAf","sourcesContent":["import axios from 'axios';\nimport Vue from 'vue';\nimport router from './router.js'\r\n\r\n\r\n//响应拦截\r\naxios.interceptors.response.use(function(response) {\n  //response  ~~ axios请求后的res\n  // 响应数据回来后，到达目标组件之前，做点事   res.status   res.data.err == 2\n  //校验返回数据，token过期，路由跳转login,传递当前路由地址\n  let currentRoute = router.currentRoute.fullPath;//获取当前路由全路径，string\n  if(response.data.err===2 && !currentRoute.includes('/login')){\n    router.replace({\n      path:'/login',\n      query:{p:currentRoute}\n    })\n  }\n  \n  return response;//奔向组件\n}, function(error) {\n  // 错误的响应，拦截\n  return Promise.reject(error);\n});\r\n\r\nVue.prototype.$axios=axios;\r\nwindow.axios=axios;\r\nexport default axios;"]}]}